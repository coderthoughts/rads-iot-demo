package org.coderthoughts.radsiotdemo;

import java.math.BigDecimal;

import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Reference;
import org.osgi.service.dal.Function;
import org.osgi.service.dal.FunctionEvent;
import org.osgi.service.dal.functions.MultiLevelControl;
import org.osgi.service.dal.functions.data.BooleanData;
import org.osgi.service.event.Event;
import org.osgi.service.event.EventConstants;
import org.osgi.service.event.EventHandler;

@Component(
        property = {
                EventConstants.EVENT_TOPIC+"="+FunctionEvent.TOPIC_PROPERTY_CHANGED,
                EventConstants.EVENT_FILTER+"=(dal.function.UID=pir1:motion)"})
public class RadsControllerDS implements EventHandler {

    @Reference(target = "("+Function.SERVICE_UID+"=rad1:setpoint)")
    Function radiator;

    @Override
    public void handleEvent(Event event) {
        MultiLevelControl radCtrl = getRadiatorControl();

        BooleanData data = (BooleanData) event.getProperty(FunctionEvent.PROPERTY_VALUE);
        int newTemp = data.getValue() ? 21 : 7;
        try {
            radCtrl.setData(new BigDecimal(newTemp), "degrees");
        } catch (Exception e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    private MultiLevelControl getRadiatorControl() {
        return (MultiLevelControl) radiator;
    }
}
